{"version":3,"sources":["main.js"],"names":["html","document","querySelector","style","string2","string","console","log","length","n","step","setTimeout","innerHTML","substring","window","scrollTo"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX;AACA,IAAIC,KAAK,GAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAZ;AACA,IAAIE,OAAO,GAAG,EAAd;AACA,IAAIC,MAAM,i1CAAV;AAmDAC,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,MAAnB;AACA,IAAIC,CAAC,GAAG,CAAR,EAEA;;AACA,IAAIC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACbC,EAAAA,UAAU,CAAC,YAAM;AACb;AACA;AACA,QAAIN,MAAM,CAACI,CAAD,CAAN,KAAc,IAAlB,EAAwB;AACpBL,MAAAA,OAAO,IAAI,MAAX;AACH,KAFD,MAEO,IAAIC,MAAM,CAACI,CAAD,CAAN,KAAc,GAAlB,EAAuB;AAC1BL,MAAAA,OAAO,IAAI,QAAX;AACH,KAFM,MAEA;AACHA,MAAAA,OAAO,IAAIC,MAAM,CAACI,CAAD,CAAjB;AACH;;AACDT,IAAAA,IAAI,CAACY,SAAL,GAAiBR,OAAjB;AACAD,IAAAA,KAAK,CAACS,SAAN,GAAkBP,MAAM,CAACQ,SAAP,CAAiB,CAAjB,EAAoBJ,CAApB,CAAlB;AACAK,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,OAAnB,EAZa,CAYe;;AAC5Bf,IAAAA,IAAI,CAACe,QAAL,CAAc,CAAd,EAAiB,MAAjB;;AACA,QAAIN,CAAC,GAAG,CAAJ,GAAQJ,MAAM,CAACG,MAAnB,EAA2B;AACvBC,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACAC,MAAAA,IAAI;AACP;AACJ,GAlBS,EAkBP,CAlBO,CAAV;AAmBH,CApBD;;AAqBAA,IAAI","file":"main.1f19ae8e.js","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector(\"#html\");\nlet style = document.querySelector('#style');\nlet string2 = ''\nlet string = `\n/*你好，我叫GJA\n * 接下来我要演示前端功底\n * 首先我要准备一个div\n**/ \n#div1{\n    border: 1px solid black;\n    width: 200px;\n    height: 200px;\n}\n/* 接下来把 div 变成一个八卦图\n * 先画一个圆\n**/\n#div1{\n    border-radius: 50%;\n    box-shadow: 0 0 3px rgba(0,0,0,0.5);\n    border: none;\n}\n/* 八卦是阴阳形成的\n * 一黑一白\n**/\n#div1{\n    background: linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 50%,\n    rgba(255,255,255,1) 50%, rgba(255,255,255,1) 100%);\n}\n/* 加两个混元球 */\n#div1::before{\n    width: 100px;\n    height: 100px;\n    top: 0;\n    left: 50%;\n    transform: translateX(-50%);\n    background: #000;\n    border-radius: 50%;\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%,\n    rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\n}\n#div1::after{\n    width: 100px;\n    height: 100px;\n    bottom:0;\n    left: 50%;\n    transform: translateX(-50%);\n    background: #fff;\n    border-radius: 50%;\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%,\n    rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%);\n    \n}\n`;\n\nconsole.log(string.length);\nlet n = 0;\n\n// 用setTimeout实现有延时的递归，以实现文字出现动画效果\nlet step = () => {\n    setTimeout(() => {\n        // 如果有回车则直接加换行符\n        // 如果没有回车则直接加字符\n        if (string[n] === '\\n') {\n            string2 += '<br>'\n        } else if (string[n] === ' ') {\n            string2 += '&nbsp;'\n        } else {\n            string2 += string[n]\n        }\n        html.innerHTML = string2;\n        style.innerHTML = string.substring(0, n);\n        window.scrollTo(0, 9999999) // 滚动到页面最下方\n        html.scrollTo(0, 999999)\n        if (n + 1 < string.length) {\n            n = n + 1;\n            step();\n        }\n    }, 0);\n};\nstep();\n\n\n"]}